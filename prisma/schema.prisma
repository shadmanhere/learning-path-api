// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement()) @map("id")
  createdAt           DateTime  @default(now()) @map("created_at")
  email               String    @unique @map("email")
  username            String    @unique @map("username")
  firstName           String    @map("first_name")
  lastName            String    @map("last_name")
  password            String    @map("password") /// @encrypted <- annotate fields to encryp
  role                Role      @default(USER) @map("role")
  resetPasswordToken  String?   @map("reset_password_token")
  resetPasswordExpire DateTime? @map("reset_password_expire")

  Chapter   Chapter? @relation(fields: [chapterId], references: [id])
  chapterId Int?     @map("chapter_id")

  @@map("users")
}

enum Role {
  USER
  ADMIN

  @@map("user_role")
}

model Category {
  id                     Int                      @id @default(autoincrement()) @map("id")
  name                   String                   @map("name")
  CategoryToLearningPath CategoryToLearningPath[]
  CategoryToTutorial     CategoryToTutorial[]

  @@map("categories")
}

model LearningPath {
  id                     Int                      @id @default(autoincrement()) @map("id")
  createdAt              DateTime                 @default(now()) @map("created_at")
  name                   String                   @unique @map("name")
  Section                Section[]
  CategoryToLearningPath CategoryToLearningPath[]

  @@map("learning_paths")
}

model Section {
  id                Int                 @id @default(autoincrement()) @map("id")
  createdAt         DateTime            @default(now()) @map("created_at")
  name              String              @map("name")
  LearningPath      LearningPath?       @relation(fields: [learningPathId], references: [id])
  learningPathId    Int?                @map("learning_path_id")
  SectionToTutorial SectionToTutorial[]

  @@map("sections")
}

model Tutorial {
  id                 Int                  @id @default(autoincrement()) @map("id")
  createdAt          DateTime             @default(now()) @map("created_at")
  title              String               @unique @map("title")
  url                String               @map("url")
  imageUrl           String               @map("image_url")
  Chapter            Chapter[]
  SectionToTutorial  SectionToTutorial[]
  CategoryToTutorial CategoryToTutorial[]

  @@map("tutorials")
}

model SectionToTutorial {
  Section    Section  @relation(fields: [sectionId], references: [id])
  sectionId  Int      @map("section_id")
  Tutorial   Tutorial @relation(fields: [tutorialId], references: [id])
  tutorialId Int      @map("tutorial_id")

  @@id([sectionId, tutorialId])
  @@map("sections_to_tutorials")
}

model CategoryToLearningPath {
  Category      Category     @relation(fields: [categoryId], references: [id])
  categoryId    Int          @map("category_id")
  LearningPath  LearningPath @relation(fields: [learninPathId], references: [id])
  learninPathId Int          @map("learning_path_id")

  @@id([categoryId, learninPathId])
  @@map("categories_to_learning_paths")
}

model CategoryToTutorial {
  Category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int      @map("category_id")
  Tutorial   Tutorial @relation(fields: [tutorialId], references: [id])
  tutorialId Int      @map("tutorial_id")

  @@id([categoryId, tutorialId])
  @@map("categories_to_tutorials")
}

model Chapter {
  id         Int       @id @default(autoincrement()) @map("id")
  createdAt  DateTime  @default(now()) @map("created_at")
  title      String    @unique @map("title")
  urlStart   String    @map("url_start")
  urlEnd     String    @map("url_end")
  imageUrl   String    @map("image_url")
  Tutorial   Tutorial? @relation(fields: [tutorialId], references: [id])
  tutorialId Int?      @map("tutorial_id")
  User       User[]

  @@map("chapters")
}
