// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  createdAt           DateTime  @default(now())
  email               String    @unique
  username            String    @unique
  firstName           String
  lastName            String
  password            String /// @encrypted <- annotate fields to encryp
  role                Role      @default(USER)
  resetPasswordToken  String?
  resetPasswordExpire DateTime?
  Chapter             Chapter[]
}

enum Role {
  USER
  ADMIN
}

model LearningPath {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  name      String    @unique
  Section   Section[]
}

model Section {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  name              String
  LearningPath      LearningPath?       @relation(fields: [learningPathId], references: [id])
  learningPathId    Int?
  SectionToTutorial SectionToTutorial[]
}

model Tutorial {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  title             String              @unique
  url               String
  image_url         String
  Chapter           Chapter[]
  SectionToTutorial SectionToTutorial[]
}

model SectionToTutorial {
  Section    Section   @relation(fields: [sectionId], references: [id])
  sectionId  Int
  Tutorial   Tutorial @relation(fields: [tutorialId], references: [id])
  tutorialId Int

  @@id([sectionId, tutorialId])
}

model Chapter {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  title       String    @unique
  url_start   String
  url_end     String
  image_url   String
  Tutorial    Tutorial? @relation(fields: [tutorial_id], references: [id])
  tutorial_id Int?
  User        User[]
}
